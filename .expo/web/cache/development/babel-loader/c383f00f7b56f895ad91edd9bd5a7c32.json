{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar Timer = function (_React$Component) {\n  _inherits(Timer, _React$Component);\n\n  var _super = _createSuper(Timer);\n\n  function Timer() {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.timerIsStart = false;\n    _this.maxTime = 60;\n    _this.state = {\n      timer: 60,\n      loop: 1,\n      maxLoop: 4,\n      exercises: [{\n        name: 'Подтягивания',\n        value: 1\n      }, {\n        name: 'Приседания',\n        value: 1\n      }, {\n        name: 'Отжимания',\n        value: 1\n      }, {\n        name: 'Выпады',\n        value: 1\n      }]\n    };\n\n    _this.timer = function () {\n      var timer = _this.state.timer;\n      var timerId = setInterval(function () {\n        if (timer > 0 && _this.timerIsStart) {\n          timer -= 1;\n\n          _this.setState({\n            timer: timer\n          });\n        } else if (timer <= 0 || !_this.timerIsStart) {\n          _this.resetTimer();\n\n          clearInterval(timerId);\n        }\n      }, 1000 * 1);\n    };\n\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      this.timerIsStart = true;\n      this.timer();\n    }\n  }, {\n    key: \"resetTimer\",\n    value: function resetTimer() {\n      this.timerIsStart = false;\n      this.setState({\n        timer: this.maxTime\n      });\n    }\n  }, {\n    key: \"timerFormatter\",\n    value: function timerFormatter() {\n      var timer = this.state.timer;\n      return timer < 10 ? '0' + timer : String(timer);\n    }\n  }, {\n    key: \"setMaxTime\",\n    value: function setMaxTime(operand) {\n      this.maxTime += operand;\n\n      if (this.maxTime < 0) {\n        this.maxTime = 0;\n      }\n\n      this.setState({\n        timer: this.maxTime\n      });\n    }\n  }, {\n    key: \"setMaxLoop\",\n    value: function setMaxLoop(operand) {\n      var maxLoop = this.state.maxLoop;\n      maxLoop += operand;\n\n      if (maxLoop < 1) {\n        maxLoop = 1;\n      }\n\n      this.setState({\n        maxLoop: maxLoop\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          loop = _this$state.loop,\n          maxLoop = _this$state.maxLoop;\n      var timerStr = this.timerFormatter();\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, {\n        style: styles.item\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setMaxTime(1);\n        },\n        title: \"+\",\n        color: \"mediumseagreen\",\n        accessibilityLabel: \"+\"\n      }), React.createElement(Text, {\n        style: styles.text\n      }, \"00:00:\" + timerStr), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setMaxTime(-1);\n        },\n        title: \"-\",\n        color: \"deepskyblue\",\n        accessibilityLabel: \"-\"\n      })), React.createElement(View, {\n        style: styles.item\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setMaxLoop(1);\n        },\n        title: \"+\",\n        color: \"mediumseagreen\",\n        accessibilityLabel: \"+\"\n      }), React.createElement(Text, {\n        style: styles.text\n      }, loop + \"/\" + maxLoop), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setMaxLoop(-1);\n        },\n        title: \"-\",\n        color: \"deepskyblue\",\n        accessibilityLabel: \"-\"\n      })), React.createElement(View, {\n        style: styles.item\n      }, React.createElement(View, {\n        style: styles.button\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.startTimer();\n        },\n        title: \"Start\",\n        color: \"#841584\",\n        accessibilityLabel: \"Start timer\"\n      })), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.resetTimer();\n        },\n        title: \"Reset\",\n        color: \"orangered\",\n        accessibilityLabel: \"Reset timer\"\n      })));\n    }\n  }]);\n\n  return Timer;\n}(React.Component);\n\nexport { Timer as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"10px\"\n  },\n  text: {\n    fontSize: 30,\n    marginRight: '15px',\n    marginLeft: \"15px\"\n  },\n  button: {\n    marginRight: '15px'\n  }\n});","map":{"version":3,"sources":["/Users/rumble/dev/my/fitness-cycle/src/components/timer/index.tsx"],"names":["React","Timer","timerIsStart","maxTime","state","timer","loop","maxLoop","exercises","name","value","timerId","setInterval","setState","resetTimer","clearInterval","String","operand","timerStr","timerFormatter","styles","container","item","setMaxTime","text","setMaxLoop","button","startTimer","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexDirection","flexWrap","padding","fontSize","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button} from 'react-native';\n\nexport default class Timer extends React.Component {\n\n    public timerIsStart:boolean = false;\n    public maxTime: number = 60;\n\n    state = {\n        timer: 60,\n        loop: 1,\n        maxLoop: 4,\n        exercises: [\n            {\n                name: 'Подтягивания',\n                value: 1\n            },\n            {\n                name: 'Приседания',\n                value: 1\n            },\n            {\n                name: 'Отжимания',\n                value: 1\n            },\n            {\n                name: 'Выпады',\n                value: 1\n            }\n        ]\n    }\n\n    startTimer() {\n        this.timerIsStart = true;\n        this.timer();\n    }\n\n    resetTimer() {\n        this.timerIsStart = false;\n        this.setState({ timer: this.maxTime });\n    }\n\n    timer = () => {\n        let { timer } = this.state;\n\n        const timerId = setInterval(() => {\n            if ( timer > 0 && this.timerIsStart ) {\n                timer -= 1;\n                this.setState({ timer });\n            } else if ( timer <= 0 || !this.timerIsStart ) {\n                this.resetTimer();\n                clearInterval(timerId);\n            }\n        },1000 * 1);\n    }\n    \n    timerFormatter() {\n        const { timer } = this.state;\n\n        return (\n            timer < 10 \n                ? '0' + timer \n                : String(timer)\n        );\n    }\n\n    setMaxTime(operand: number) {\n        this.maxTime += operand;\n\n        if ( this.maxTime < 0 ) { \n            this.maxTime = 0;\n        }\n\n        this.setState({\n            timer: this.maxTime\n        });\n    }\n\n    setMaxLoop(operand: number) {\n        let { maxLoop } = this.state;\n\n        maxLoop += operand;\n\n        if ( maxLoop < 1 ) { \n            maxLoop = 1;\n        }\n\n        this.setState({ maxLoop });\n    }\n\n    render() {\n        const { \n            loop, \n            maxLoop \n        } = this.state;\n        const timerStr: string = this.timerFormatter();\n\n        return (\n            <View style={styles.container}>\n                <View style={styles.item}>\n                    <Button onPress={() => {this.setMaxTime(1)}} title='+' color='mediumseagreen' accessibilityLabel='+'/>\n                    <Text style={styles.text}>{`00:00:${timerStr}`}</Text>\n                    <Button onPress={() => {this.setMaxTime(-1)}} title='-' color='deepskyblue' accessibilityLabel='-'/>\n                </View>\n                <View style={styles.item}>\n                    <Button onPress={() => {this.setMaxLoop(1)}} title='+' color='mediumseagreen' accessibilityLabel='+'/>\n                    <Text style={ styles.text }>{`${loop}/${maxLoop}`}</Text>\n                    <Button onPress={() => {this.setMaxLoop(-1)}} title='-' color='deepskyblue' accessibilityLabel='-'/>\n                </View>\n                <View style={styles.item}>\n                    <View style={styles.button}>\n                        <Button onPress={() => {this.startTimer()}} title='Start' color='#841584' accessibilityLabel='Start timer'/>\n                    </View>\n                    <Button onPress={() => {this.resetTimer()}} title='Reset' color=\"orangered\" accessibilityLabel='Reset timer'/>\n                </View>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    item: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        padding: \"10px\"\n    },\n    text: {\n        fontSize: 30,\n        marginRight: '15px',\n        marginLeft: \"15px\"\n    },\n    button: {\n        marginRight: '15px'\n    }\n});\n"]},"metadata":{},"sourceType":"module"}