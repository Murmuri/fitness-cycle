{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DraggableFlatList from 'react-native-draggable-flatlist';\nimport { VscGrabber } from 'react-icons/vsc';\nexport var Exercises = function (_React$Component) {\n  _inherits(Exercises, _React$Component);\n\n  var _super = _createSuper(Exercises);\n\n  function Exercises() {\n    var _this;\n\n    _classCallCheck(this, Exercises);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [{\n        name: '',\n        count: 1,\n        key: 'item-0'\n      }]\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          drag = _ref.drag,\n          isActive = _ref.isActive;\n      var data = _this.state.data;\n      return React.createElement(TouchableOpacity, {\n        style: {\n          height: 75,\n          backgroundColor: isActive ? '#d3c2f8' : 'none',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          padding: '10px'\n        },\n        onLongPress: drag\n      }, React.createElement(VscGrabber, {\n        style: {\n          height: '25px',\n          width: '25px',\n          marginRight: '20px'\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          width: '50%',\n          fontSize: 20,\n          marginRight: '10px'\n        },\n        onChangeText: function onChangeText(text) {\n          setTimeout(function () {\n            item.name = text;\n          }, 200);\n        },\n        value: item.name,\n        placeholder: \"Exercise name\"\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          data[index].count = item.count + 1;\n\n          if (data[index].count < 1) {\n            data[index].count = 1;\n          }\n\n          _this.setState({\n            data: data\n          });\n        },\n        title: \"-\",\n        color: \"#c4f54e\",\n        accessibilityLabel: \"-\"\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginRight: '15px',\n          marginLeft: '15px'\n        }\n      }, item.count), React.createElement(Button, {\n        onPress: function onPress() {\n          data[index].count = item.count + 1;\n\n          _this.setState({\n            data: data\n          });\n        },\n        title: \"+\",\n        color: \"#61d284\",\n        accessibilityLabel: \"+\"\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Exercises, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.state.data;\n      return React.createElement(View, {\n        style: {\n          backgroundColor: '#fff',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%'\n        }\n      }, React.createElement(DraggableFlatList, {\n        data: data,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return \"draggable-item-\" + item.key;\n        },\n        onDragEnd: function onDragEnd(_ref2) {\n          var data = _ref2.data;\n          return _this2.setState({\n            data: data\n          });\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: '15px'\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          data.push({\n            name: '',\n            count: 1,\n            key: 'item-' + data.length\n          });\n\n          _this2.setState({\n            data: data\n          });\n        },\n        title: \"Add\",\n        color: \"#1b434d\",\n        accessibilityLabel: \"Start timer\"\n      })));\n    }\n  }]);\n\n  return Exercises;\n}(React.Component);\nexport default Exercises;","map":{"version":3,"sources":["/home/rumble/dev/my/fitness-cycle/src/components/exercises/index.tsx"],"names":["React","DraggableFlatList","VscGrabber","Exercises","state","data","name","count","key","renderItem","item","index","drag","isActive","height","backgroundColor","alignItems","justifyContent","flexDirection","flexWrap","padding","width","marginRight","fontSize","text","setTimeout","setState","marginLeft","marginTop","push","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity, Button, TextInput, Text  } from 'react-native';\nimport DraggableFlatList, { RenderItemParams } from 'react-native-draggable-flatlist';\nimport { VscGrabber } from 'react-icons/vsc';\n\n\ntype Item = {\n    key: string;\n    name: string;\n    count: number;\n};\n\nexport class Exercises extends React.Component<any, any>{\n\n    state = {\n        data: [\n            {\n                name: '',\n                count: 1,\n                key: 'item-0'\n            }\n        ]\n    }\n \n    renderItem = ({ item, index, drag, isActive }: RenderItemParams<Item>) => {\n        const { data } = this.state;\n        \n        return (\n            <TouchableOpacity\n                style={{\n                    height: 75,\n                    backgroundColor: isActive ? '#d3c2f8' : 'none',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flexDirection: 'row',\n                    flexWrap: 'wrap',\n                    padding: '10px'\n                }}\n                onLongPress={ drag }\n            >\n                <VscGrabber \n                    style={{\n                        height: '25px' , \n                        width: '25px', \n                        marginRight: '20px'\n                    }}/>\n                <TextInput\n                    style={{\n                        width: '50%',\n                        fontSize: 20,\n                        marginRight: '10px'\n                    }}\n                    onChangeText={(text) => {\n                        setTimeout(() => {\n                            item.name = text;\n                        }, 200);\n                    }}\n                    value={ item.name }\n                    placeholder='Exercise name'\n                />\n                <Button \n                    onPress={() => {\n                        data[index as number].count = item.count + 1;\n\n                        if ( data[index as number].count < 1 ) {\n                            data[index as number].count = 1;\n                        }\n                        \n                        this.setState({ data });\n                    }} \n                    title='-' \n                    color='#c4f54e' \n                    accessibilityLabel='-'\n                />\n                <Text\n                    style={{\n                        fontSize: 20,\n                        marginRight: '15px',\n                        marginLeft: '15px'\n                    }}\n                >\n                    { item.count }\n                </Text>\n                <Button \n                    onPress={() => {\n                        data[index as number].count = item.count + 1;\n                        this.setState({ data });\n                    }} \n                    title='+' \n                    color='#61d284' \n                    accessibilityLabel='+' \n                />\n            </TouchableOpacity>\n        );\n    } \n\n    render() {\n        const { data } = this.state;\n        \n        return (\n            <View style={{  \n                backgroundColor: '#fff',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width: '100%'\n            }}>\n                <DraggableFlatList\n                    data={ data }\n                    renderItem={ this.renderItem }\n                    keyExtractor={(item, index) => `draggable-item-${item.key}`}\n                    onDragEnd={({ data }) => this.setState({ data })}\n                />\n                <View style={{ marginTop: '15px' }}>\n                    <Button \n                        onPress={() => {\n                            data.push({\n                                name: '',\n                                count: 1,\n                                key: 'item-' + data.length\n                            })\n\n                            this.setState({ data });\n                        }} \n                        title='Add' \n                        color='#1b434d' \n                        accessibilityLabel='Start timer'\n                    />\n                </View>\n            </View>\n        );\n    }   \n   \n}\n\n\nexport default Exercises;\n"]},"metadata":{},"sourceType":"module"}