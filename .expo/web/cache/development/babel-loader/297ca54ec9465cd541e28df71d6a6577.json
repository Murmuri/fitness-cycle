{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DraggableFlatList from 'react-native-draggable-flatlist';\nimport { VscGrabber } from 'react-icons/vsc';\n\nvar exampleData = _toConsumableArray(Array(4)).map(function (d, index) {\n  return {\n    key: \"item-\" + index,\n    label: String(index)\n  };\n});\n\nfunction Exercises(_ref) {\n  var style = _ref.style;\n\n  var _useState = useState(exampleData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index,\n        drag = _ref2.drag,\n        isActive = _ref2.isActive;\n    return React.createElement(TouchableOpacity, {\n      style: {\n        height: 75,\n        backgroundColor: isActive ? 'red' : 'none',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        padding: '10px'\n      },\n      onLongPress: drag\n    }, React.createElement(VscGrabber, {\n      style: {\n        height: '30px',\n        width: '30px',\n        marginRight: '10px'\n      }\n    }), React.createElement(TextInput, {\n      style: {\n        width: '50%',\n        fontSize: 32,\n        marginRight: '10px'\n      },\n      onChangeText: function onChangeText() {},\n      value: undefined,\n      placeholder: \"Exercise name\"\n    }), React.createElement(Button, {\n      onPress: function onPress() {},\n      title: \"-\",\n      color: \"deepskyblue\",\n      accessibilityLabel: \"-\"\n    }), React.createElement(Text, {\n      style: {\n        fontSize: 30,\n        marginRight: '15px',\n        marginLeft: '15px'\n      }\n    }, item.label), React.createElement(Button, {\n      onPress: function onPress() {},\n      title: \"+\",\n      color: \"mediumseagreen\",\n      accessibilityLabel: \"+\"\n    }), React.createElement(Button, {\n      onPress: function onPress() {},\n      title: \"Del\",\n      color: \"red\",\n      accessibilityLabel: \"+\"\n    }));\n  }, []);\n  return React.createElement(View, {\n    style: {\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    }\n  }, React.createElement(DraggableFlatList, {\n    data: data,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item, index) {\n      return \"draggable-item-\" + item.key;\n    },\n    onDragEnd: function onDragEnd(_ref3) {\n      var data = _ref3.data;\n      return setData(data);\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {},\n    title: \"Add\",\n    color: \"#841584\",\n    accessibilityLabel: \"Start timer\"\n  }));\n}\n\nexport default Exercises;","map":{"version":3,"sources":["/Users/rumble/dev/my/fitness-cycle/src/components/exercises/index.tsx"],"names":["React","useState","useCallback","DraggableFlatList","VscGrabber","exampleData","Array","map","d","index","key","label","String","Exercises","style","data","setData","renderItem","item","drag","isActive","height","backgroundColor","alignItems","justifyContent","flexDirection","flexWrap","padding","width","marginRight","fontSize","undefined","marginLeft"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;;;;;AAEA,OAAOC,iBAAP,MAAoD,iCAApD;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,IAAMC,WAAmB,GAAG,mBAAIC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACxD,SAAO;AACHC,IAAAA,GAAG,YAAUD,KADV;AAEHE,IAAAA,KAAK,EAAEC,MAAM,CAACH,KAAD;AAFV,GAAP;AAIH,CAL2B,CAA5B;;AAYA,SAASI,SAAT,OAAiC;AAAA,MAAbC,KAAa,QAAbA,KAAa;;AAC7B,kBAAwBb,QAAQ,CAACI,WAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,UAAU,GAAGf,WAAW,CAC1B,iBAA6D;AAAA,QAA1DgB,IAA0D,SAA1DA,IAA0D;AAAA,QAApDT,KAAoD,SAApDA,KAAoD;AAAA,QAA7CU,IAA6C,SAA7CA,IAA6C;AAAA,QAAvCC,QAAuC,SAAvCA,QAAuC;AACzD,WACI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,EADL;AAEHC,QAAAA,eAAe,EAAEF,QAAQ,GAAG,KAAH,GAAW,MAFjC;AAGHG,QAAAA,UAAU,EAAE,QAHT;AAIHC,QAAAA,cAAc,EAAE,QAJb;AAKHC,QAAAA,aAAa,EAAE,KALZ;AAMHC,QAAAA,QAAQ,EAAE,MANP;AAOHC,QAAAA,OAAO,EAAE;AAPN,OADX;AAUI,MAAA,WAAW,EAAER;AAVjB,OAYI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACE,QAAAA,MAAM,EAAE,MAAT;AAAkBO,QAAAA,KAAK,EAAE,MAAzB;AAAiCC,QAAAA,WAAW,EAAE;AAA9C;AAAnB,MAZJ,EAaI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAE;AACHD,QAAAA,KAAK,EAAE,KADJ;AAEHE,QAAAA,QAAQ,EAAE,EAFP;AAGHD,QAAAA,WAAW,EAAE;AAHV,OADX;AAMI,MAAA,YAAY,EAAE,wBAAM,CAAE,CAN1B;AAOI,MAAA,KAAK,EAAEE,SAPX;AAQI,MAAA,WAAW,EAAC;AARhB,MAbJ,EAuBI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE,mBAAM,CAAE,CADrB;AAEI,MAAA,KAAK,EAAC,GAFV;AAGI,MAAA,KAAK,EAAC,aAHV;AAII,MAAA,kBAAkB,EAAC;AAJvB,MAvBJ,EA6BI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHD,QAAAA,QAAQ,EAAE,EADP;AAEHD,QAAAA,WAAW,EAAE,MAFV;AAGHG,QAAAA,UAAU,EAAE;AAHT;AADX,OAOKd,IAAI,CAACP,KAPV,CA7BJ,EAsCI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE,mBAAM,CAAE,CADrB;AAEI,MAAA,KAAK,EAAC,GAFV;AAGI,MAAA,KAAK,EAAC,gBAHV;AAII,MAAA,kBAAkB,EAAC;AAJvB,MAtCJ,EA4CK,oBAAC,MAAD;AACG,MAAA,OAAO,EAAE,mBAAM,CAAE,CADpB;AAEG,MAAA,KAAK,EAAC,KAFT;AAGG,MAAA,KAAK,EAAC,KAHT;AAIG,MAAA,kBAAkB,EAAC;AAJtB,MA5CL,CADJ;AAqDH,GAvDyB,EAwD1B,EAxD0B,CAA9B;AA2DA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTW,MAAAA,eAAe,EAAE,MADR;AAETC,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,cAAc,EAAE,QAHP;AAITI,MAAAA,KAAK,EAAE;AAJE;AAAb,KAMI,oBAAC,iBAAD;AACI,IAAA,IAAI,EAAEb,IADV;AAEI,IAAA,UAAU,EAAEE,UAFhB;AAGI,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAOT,KAAP;AAAA,iCAAmCS,IAAI,CAACR,GAAxC;AAAA,KAHlB;AAII,IAAA,SAAS,EAAE;AAAA,UAAGK,IAAH,SAAGA,IAAH;AAAA,aAAcC,OAAO,CAACD,IAAD,CAArB;AAAA;AAJf,IANJ,EAYI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,mBAAM,CAAE,CADrB;AAEI,IAAA,KAAK,EAAC,KAFV;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,kBAAkB,EAAC;AAJvB,IAZJ,CADJ;AAqBH;;AAGD,eAAeF,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { View, TouchableOpacity, Button, TextInput, Text  } from 'react-native';\nimport DraggableFlatList, { RenderItemParams } from 'react-native-draggable-flatlist';\nimport { VscGrabber } from 'react-icons/vsc';\n\nconst exampleData: Item[] = [...Array(4)].map((d, index) => {\n    return {\n        key: `item-${index}`,\n        label: String(index)\n    };\n});\n\ntype Item = {\n    key: string;\n    label: string;\n};\n\nfunction Exercises({style}: any) {\n    const [data, setData] = useState(exampleData);\n\n    const renderItem = useCallback(\n        ({ item, index, drag, isActive }: RenderItemParams<Item>) => {\n            return (\n                <TouchableOpacity\n                    style={{\n                        height: 75,\n                        backgroundColor: isActive ? 'red' : 'none',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        flexDirection: 'row',\n                        flexWrap: 'wrap',\n                        padding: '10px'\n                    }}\n                    onLongPress={drag}\n                >\n                    <VscGrabber style={{height: '30px' , width: '30px', marginRight: '10px'}}/>\n                    <TextInput\n                        style={{\n                            width: '50%',\n                            fontSize: 32,\n                            marginRight: '10px'\n                        }}\n                        onChangeText={() => {}}\n                        value={undefined}\n                        placeholder='Exercise name'\n                    />\n                    <Button \n                        onPress={() => {}} \n                        title='-' \n                        color='deepskyblue' \n                        accessibilityLabel='-'\n                    />\n                    <Text\n                        style={{\n                            fontSize: 30,\n                            marginRight: '15px',\n                            marginLeft: '15px'\n                        }}\n                    >\n                        {item.label}\n                    </Text>\n                    <Button \n                        onPress={() => {}} \n                        title='+' \n                        color='mediumseagreen' \n                        accessibilityLabel='+' \n                    />\n                     <Button \n                        onPress={() => {}} \n                        title='Del' \n                        color='red' \n                        accessibilityLabel='+' \n                    />\n                </TouchableOpacity>\n            );\n        },\n        []  \n    );\n\n    return (\n        <View style={{  \n            backgroundColor: '#fff',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%'\n        }}>\n            <DraggableFlatList\n                data={data}\n                renderItem={renderItem}\n                keyExtractor={(item, index) => `draggable-item-${item.key}`}\n                onDragEnd={({ data }) => setData(data)}\n            />\n            <Button \n                onPress={() => {}} \n                title='Add' \n                color='#841584' \n                accessibilityLabel='Start timer'\n            />\n        </View>\n    );\n}\n\n\nexport default Exercises;\n"]},"metadata":{},"sourceType":"module"}