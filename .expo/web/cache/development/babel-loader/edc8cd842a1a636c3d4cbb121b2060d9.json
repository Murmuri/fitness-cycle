{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar Timer = function (_React$Component) {\n  _inherits(Timer, _React$Component);\n\n  var _super = _createSuper(Timer);\n\n  function Timer() {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.timerIsStart = false;\n    _this.maxTime = 5;\n    _this.state = {\n      timer: _this.maxTime,\n      loop: 1,\n      maxLoop: 4\n    };\n\n    _this.timer = function () {\n      var timer = _this.state.timer;\n      var timerId = setInterval(function () {\n        if (timer > 0 && _this.timerIsStart) {\n          timer -= 1;\n\n          _this.setState({\n            timer: timer\n          });\n        } else if (timer <= 0 && _this.timerIsStart) {\n          var _this$state = _this.state,\n              loop = _this$state.loop,\n              maxLoop = _this$state.maxLoop;\n\n          if (loop >= maxLoop) {\n            _this.setState({\n              loop: maxLoop\n            });\n          } else {\n            _this.setState({\n              loop: loop + 1\n            });\n          }\n\n          _this.resetTimer();\n\n          clearInterval(timerId);\n        } else if (timer <= 0 || !_this.timerIsStart) {\n          _this.resetTimer();\n\n          clearInterval(timerId);\n        }\n      }, 1000 * 1);\n    };\n\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      this.timerIsStart = true;\n      this.timer();\n    }\n  }, {\n    key: \"resetTimer\",\n    value: function resetTimer() {\n      this.timerIsStart = false;\n      this.setState({\n        timer: this.maxTime\n      });\n    }\n  }, {\n    key: \"timerFormatter\",\n    value: function timerFormatter() {\n      var timer = this.state.timer;\n      var minutes = Math.floor(timer / 60);\n      var seconds = timer % 60;\n\n      if (minutes > 59) {\n        minutes = '59';\n      }\n\n      if (minutes < 10) {\n        minutes = '0' + minutes;\n      }\n\n      if (seconds < 10) {\n        seconds = '0' + seconds;\n      }\n\n      return {\n        minutes: minutes,\n        seconds: seconds\n      };\n    }\n  }, {\n    key: \"setMaxTime\",\n    value: function setMaxTime(operand) {\n      this.maxTime += operand;\n\n      if (this.maxTime < 0) {\n        this.maxTime = 0;\n      }\n\n      this.setState({\n        timer: this.maxTime\n      });\n    }\n  }, {\n    key: \"setMaxLoop\",\n    value: function setMaxLoop(operand) {\n      var _this$state2 = this.state,\n          maxLoop = _this$state2.maxLoop,\n          loop = _this$state2.loop;\n      maxLoop += operand;\n\n      if (maxLoop < 1) {\n        maxLoop = 1;\n      }\n\n      if (maxLoop < loop) {\n        maxLoop = loop;\n      }\n\n      this.setState({\n        maxLoop: maxLoop\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          loop = _this$state3.loop,\n          maxLoop = _this$state3.maxLoop;\n      var edit = this.props.edit;\n\n      var _this$timerFormatter = this.timerFormatter(),\n          minutes = _this$timerFormatter.minutes,\n          seconds = _this$timerFormatter.seconds;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, {\n        style: styles.item\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setMaxTime(-1);\n        },\n        title: \"-\",\n        color: \"#d3c2f8\",\n        accessibilityLabel: \"-\",\n        disabled: this.timerIsStart\n      }), React.createElement(Text, {\n        style: styles.text\n      }, \"00:\" + minutes + \":\" + seconds), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setMaxTime(1);\n        },\n        title: \"+\",\n        color: \"#61d284\",\n        accessibilityLabel: \"+\",\n        disabled: this.timerIsStart\n      })), React.createElement(View, {\n        style: styles.item\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setMaxLoop(-1);\n        },\n        title: \"-\",\n        color: \"#d3c2f8\",\n        accessibilityLabel: \"-\",\n        disabled: this.timerIsStart\n      }), React.createElement(Text, {\n        style: styles.text\n      }, loop + \"/\" + maxLoop), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setMaxLoop(1);\n        },\n        title: \"+\",\n        color: \"#61d284\",\n        accessibilityLabel: \"+\",\n        disabled: this.timerIsStart\n      })), React.createElement(View, {\n        style: styles.item\n      }, React.createElement(View, {\n        style: styles.startButton\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.startTimer();\n        },\n        title: \"Start\",\n        color: \"#61d284\",\n        accessibilityLabel: \"Start timer\",\n        disabled: edit\n      })), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.resetTimer();\n\n          _this2.setState({\n            loop: 1\n          });\n        },\n        title: \"Reset\",\n        color: \"#1b434d\",\n        accessibilityLabel: \"Reset timer\",\n        disabled: edit\n      })));\n    }\n  }]);\n\n  return Timer;\n}(React.Component);\n\nexport { Timer as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: '20px'\n  },\n  item: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: '10px'\n  },\n  button: {\n    display: 'none'\n  },\n  text: {\n    fontSize: 30,\n    marginRight: '15px',\n    marginLeft: '15px'\n  },\n  startButton: {\n    marginRight: '15px'\n  }\n});","map":{"version":3,"sources":["/home/rumble/dev/my/fitness-cycle/src/components/timer/index.tsx"],"names":["React","Timer","timerIsStart","maxTime","state","timer","loop","maxLoop","timerId","setInterval","setState","resetTimer","clearInterval","minutes","Math","floor","seconds","operand","edit","props","timerFormatter","styles","container","item","setMaxTime","text","setMaxLoop","startButton","startTimer","Component","StyleSheet","create","backgroundColor","alignItems","justifyContent","marginBottom","flexDirection","flexWrap","padding","button","display","fontSize","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button} from 'react-native';\n\nexport default class Timer extends React.Component<any, any> {\n\n    public timerIsStart:boolean = false;\n    public maxTime: number = 5;\n\n    state = {\n        timer: this.maxTime,\n        loop: 1,\n        maxLoop: 4\n    }\n\n    startTimer() {\n        this.timerIsStart = true;\n        this.timer();\n    }\n\n    resetTimer() {\n        this.timerIsStart = false;\n        this.setState({ timer: this.maxTime });\n    }\n\n    timer = () => {\n        let { timer } = this.state;\n\n        const timerId = setInterval(() => {\n            if ( timer > 0 && this.timerIsStart ) {\n                timer -= 1;\n                this.setState({ timer });\n            } else if ( timer <= 0 && this.timerIsStart ) {\n                const { \n                    loop,\n                    maxLoop\n                } = this.state;\n                \n                if ( loop >= maxLoop ) {\n                    this.setState({ loop: maxLoop});\n                } else {\n                    this.setState({ loop: loop + 1});\n                }\n\n                this.resetTimer();\n                clearInterval(timerId);\n            } else if ( timer <= 0 || !this.timerIsStart ){\n                this.resetTimer();\n                clearInterval(timerId);\n            }\n\n        },1000 * 1);\n    }\n    \n    timerFormatter() {\n        const { timer } = this.state;\n\n        let minutes: string | number = Math.floor(timer / 60);\n        let seconds: string | number = timer % 60;\n\n        if ( minutes > 59 ) {\n            minutes = '59';\n        }\n\n        if ( minutes < 10 ) {\n            minutes = '0' + minutes;\n        }\n\n        if ( seconds < 10 ) {\n            seconds = '0' + seconds;\n        }\n\n        return {\n            minutes,\n            seconds\n        };\n    }\n\n    setMaxTime(operand: number) {\n        this.maxTime += operand;\n\n        if ( this.maxTime < 0 ) { \n            this.maxTime = 0;\n        }\n\n        this.setState({\n            timer: this.maxTime\n        });\n    }\n\n    setMaxLoop(operand: number) {\n        let { maxLoop, loop } = this.state;\n\n        maxLoop += operand;\n\n        if ( maxLoop < 1 ) { \n            maxLoop = 1;\n        }\n\n        if ( maxLoop < loop ) {\n            maxLoop = loop;\n        }\n\n        this.setState({ maxLoop });\n    }\n\n    render() {\n        const { \n            loop, \n            maxLoop \n        } = this.state;\n        const { edit } = this.props;\n        const {\n            minutes,\n            seconds\n        } = this.timerFormatter();\n\n        return (\n            <View style={ styles.container }>\n                <View style={ styles.item }>\n                    <Button \n                        onPress={() => {\n                            this.setMaxTime(-1);\n                        }} \n                        title='-' \n                        color='#d3c2f8' \n                        accessibilityLabel='-' \n                        disabled={ this.timerIsStart }\n                    />\n                    <Text \n                        style={ styles.text }\n                    >\n                        {`00:${minutes}:${seconds}`}\n                    </Text>\n                    <Button \n                        onPress={() => {\n                            this.setMaxTime(1);\n                        }} \n                        title='+' \n                        color='#61d284' \n                        accessibilityLabel='+' \n                        disabled={ this.timerIsStart }\n                    />\n                </View>\n                <View style={styles.item}>\n                    <Button \n                        onPress={() => {\n                            this.setMaxLoop(-1);\n                        }}\n                        title='-' \n                        color='#d3c2f8' \n                        accessibilityLabel='-' \n                        disabled={ this.timerIsStart }\n                    />\n                    <Text \n                        style={ styles.text }\n                    >\n                        {`${loop}/${maxLoop}`}\n                    </Text>\n                    <Button \n                        onPress={() => {\n                            this.setMaxLoop(1);\n                        }} \n                        title='+' \n                        color='#61d284' \n                        accessibilityLabel='+' \n                        disabled={ this.timerIsStart }\n                    />\n                </View>\n                <View style={ styles.item }>\n                    <View style={ styles.startButton }>\n                        <Button \n                            onPress={() => {\n                                this.startTimer();\n                            }} \n                            title='Start' \n                            color='#61d284' \n                            accessibilityLabel='Start timer'\n                            disabled={ edit }\n                        />\n                    </View>\n                    <Button \n                        onPress={() => {\n                            this.resetTimer();\n                            this.setState({ loop: 1});\n                        }} \n                        title='Reset' \n                        color='#1b434d' \n                        accessibilityLabel='Reset timer'\n                        disabled={ edit }\n                    />\n                </View>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '20px'\n    },\n    item: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        padding: '10px'\n    },\n    button: {\n        display: 'none'\n    },\n    text: {\n        fontSize: 30,\n        marginRight: '15px',\n        marginLeft: '15px'\n    },\n    startButton: {\n        marginRight: '15px'\n    }\n});\n"]},"metadata":{},"sourceType":"module"}