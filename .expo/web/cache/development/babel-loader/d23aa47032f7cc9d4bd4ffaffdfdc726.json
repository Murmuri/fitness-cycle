{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { useState, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\nvar NUM_ITEMS = 10;\n\nfunction getColor(i) {\n  var multiplier = 255 / (NUM_ITEMS - 1);\n  var colorVal = i * multiplier;\n  return \"rgb(\" + colorVal + \", \" + Math.abs(128 - colorVal) + \", \" + (255 - colorVal) + \")\";\n}\n\nvar exampleData = _toConsumableArray(Array(20)).map(function (d, index) {\n  var backgroundColor = getColor(index);\n  return {\n    key: \"item-\" + backgroundColor,\n    label: String(index),\n    backgroundColor: backgroundColor\n  };\n});\n\nfunction Exercises() {\n  var _useState = useState(exampleData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var renderItem = useCallback(function (_ref) {\n    var item = _ref.item,\n        index = _ref.index,\n        drag = _ref.drag,\n        isActive = _ref.isActive;\n    return React.createElement(TouchableOpacity, {\n      style: {\n        height: 100,\n        backgroundColor: isActive ? \"red\" : item.backgroundColor,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        padding: \"10px\"\n      },\n      onLongPress: drag\n    }, React.createElement(TextInput, {\n      style: {\n        fontWeight: \"bold\",\n        color: \"white\",\n        width: '40%',\n        fontSize: 32\n      },\n      onChangeText: function onChangeText() {},\n      value: item.label\n    }), React.createElement(Button, {\n      onPress: function onPress() {},\n      title: \"-\",\n      color: \"deepskyblue\",\n      accessibilityLabel: \"-\"\n    }), React.createElement(Text, {\n      style: {\n        fontSize: 30,\n        marginRight: '15px',\n        marginLeft: \"15px\"\n      }\n    }, item.label), React.createElement(Button, {\n      onPress: function onPress() {},\n      title: \"+\",\n      color: \"mediumseagreen\",\n      accessibilityLabel: \"+\"\n    }));\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    }\n  }, React.createElement(DraggableFlatList, {\n    data: data,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item, index) {\n      return \"draggable-item-\" + item.key;\n    },\n    onDragEnd: function onDragEnd(_ref2) {\n      var data = _ref2.data;\n      return setData(data);\n    }\n  }));\n}\n\nexport default Exercises;","map":{"version":3,"sources":["/Users/rumble/dev/my/fitness-cycle/src/components/exercises/index.tsx"],"names":["React","useState","useCallback","DraggableFlatList","NUM_ITEMS","getColor","i","multiplier","colorVal","Math","abs","exampleData","Array","map","d","index","backgroundColor","key","label","String","Exercises","data","setData","renderItem","item","drag","isActive","height","alignItems","justifyContent","flexDirection","flexWrap","padding","fontWeight","color","width","fontSize","marginRight","marginLeft","flex"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { View, TouchableOpacity, Button, TextInput, Text  } from \"react-native\";\nimport DraggableFlatList, { RenderItemParams } from \"react-native-draggable-flatlist\";\n\nconst NUM_ITEMS = 10;\n\nfunction getColor(i: number) {\n    const multiplier = 255 / (NUM_ITEMS - 1);\n    const colorVal = i * multiplier;\n    return `rgb(${colorVal}, ${Math.abs(128 - colorVal)}, ${255 - colorVal})`;\n}\n\nconst exampleData: Item[] = [...Array(20)].map((d, index) => {\n    const backgroundColor = getColor(index);\n    return {\n        key: `item-${backgroundColor}`,\n        label: String(index),\n        backgroundColor\n    };\n});\n\ntype Item = {\n    key: string;\n    label: string;\n    backgroundColor: string;\n};\n\nfunction Exercises() {\n    const [data, setData] = useState(exampleData);\n\n    const renderItem = useCallback(\n        ({ item, index, drag, isActive }: RenderItemParams<Item>) => {\n            return (\n                <TouchableOpacity\n                    style={{\n                        height: 100,\n                        backgroundColor: isActive ? \"red\" : item.backgroundColor,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        padding: \"10px\"\n                    }}\n                    onLongPress={drag}\n                >\n                <TextInput\n                    style={{\n                        fontWeight: \"bold\",\n                        color: \"white\",\n                        width: '40%',\n                        fontSize: 32,\n                    }}\n                    onChangeText={() => {}}\n                    value={item.label}\n                />\n                <Button \n                    onPress={() => {}} \n                    title='-' \n                    color='deepskyblue' \n                    accessibilityLabel='-'\n                />\n                <Text\n                    style={{\n                        fontSize: 30,\n                        marginRight: '15px',\n                        marginLeft: \"15px\"\n                    }}\n                >\n                    {item.label}\n                </Text>\n                <Button \n                    onPress={() => {}} \n                    title='+' \n                    color='mediumseagreen' \n                    accessibilityLabel='+' \n                />\n                </TouchableOpacity>\n            );\n        },\n        []  \n    );\n\n    return (\n        <View style={{  \n            flex: 1,\n            backgroundColor: '#fff',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%'\n        }}>\n            <DraggableFlatList\n                data={data}\n                renderItem={renderItem}\n                keyExtractor={(item, index) => `draggable-item-${item.key}`}\n                onDragEnd={({ data }) => setData(data)}\n            />\n        </View>\n    );\n}\n\n\nexport default Exercises;\n"]},"metadata":{},"sourceType":"module"}