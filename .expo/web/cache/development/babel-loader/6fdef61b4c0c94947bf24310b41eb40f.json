{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      timerIsStart: false,\n      timer: 60,\n      currentTimer: 60,\n      loop: 1,\n      loopMax: 4,\n      exercises: [{\n        name: 'Подтягивания',\n        value: 1\n      }, {\n        name: 'Приседания',\n        value: 1\n      }, {\n        name: 'Отжимания',\n        value: 1\n      }, {\n        name: 'Выпады',\n        value: 1\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"runTimer\",\n    value: function runTimer() {\n      this.setState({\n        timerIsStart: true\n      });\n    }\n  }, {\n    key: \"resetTimer\",\n    value: function resetTimer() {\n      this.setState({\n        currentTimer: 60,\n        timerIsStart: false\n      });\n    }\n  }, {\n    key: \"timer\",\n    value: function timer() {\n      var _this2 = this;\n\n      var currentTimer = this.state.currentTimer;\n      setTimeout(function () {\n        if (currentTimer > 0) {\n          _this2.setState({\n            currentTimer: currentTimer - 1\n          });\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          currentTimer = _this$state.currentTimer,\n          timerIsStart = _this$state.timerIsStart;\n      var timerStr = currentTimer < 10 ? '0' + currentTimer : String(currentTimer);\n\n      if (timerIsStart && currentTimer > 0) {\n        this.timer();\n      } else if (timerIsStart && currentTimer <= 0) {\n        this.setState({\n          timer: 20,\n          timerIsStart: false\n        });\n      }\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Text, null, \"00:00:\" + timerStr), React.createElement(Button, {\n        onPress: function onPress() {\n          _this3.runTimer();\n        },\n        title: \"Start\",\n        color: \"#841584\",\n        accessibilityLabel: \"Start timer\"\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          _this3.resetTimer();\n        },\n        title: \"Reset\",\n        color: \"#841584\",\n        accessibilityLabel: \"Start timer\"\n      }), React.createElement(StatusBar, {\n        style: \"auto\"\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/rumble/dev/my/fitness-cycle/App.tsx"],"names":["StatusBar","React","App","state","timerIsStart","timer","currentTimer","loop","loopMax","exercises","name","value","setState","setTimeout","timerStr","String","styles","container","runTimer","resetTimer","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Button} from 'react-native';\n\nexport default class App extends React.Component {\n  \n  state = {\n    timerIsStart: false,\n    timer: 60,\n    currentTimer: 60,\n    loop: 1,\n    loopMax: 4,\n    exercises: [\n      {\n        name: 'Подтягивания',\n        value: 1\n      },\n      {\n        name: 'Приседания',\n        value: 1\n      },\n      {\n        name: 'Отжимания',\n        value: 1\n      },\n      {\n        name: 'Выпады',\n        value: 1\n      }\n    ]\n  }\n\n  runTimer() {\n    this.setState({ timerIsStart: true });\n  }\n\n  resetTimer() {\n    this.setState({\n      currentTimer: 60,\n      timerIsStart: false \n    })\n  }\n\n  timer() {\n    const { currentTimer } = this.state;\n\n    setTimeout(() => {\n        if ( currentTimer > 0 ) {\n          this.setState({ currentTimer: currentTimer - 1 });\n        }\n      },\n      1000\n    );\n  }\n\n  render() {\n    const { \n      currentTimer, \n      timerIsStart \n    } = this.state;\n    const timerStr: string = currentTimer < 10 ? '0' + currentTimer : String(currentTimer);\n\n    if ( timerIsStart && currentTimer > 0 ) {\n      this.timer();\n    } else if ( timerIsStart && currentTimer <= 0) {\n      this.setState({\n        timer: 20,\n        timerIsStart: false \n      })\n    }\n    \n    return (\n      <View style={styles.container}>\n        <Text>{`00:00:${timerStr}`}</Text>\n        <Button onPress={() => {this.runTimer()}}  title='Start'  color='#841584'  accessibilityLabel='Start timer'/>\n        <Button onPress={() => {this.resetTimer()}}  title='Reset'  color='#841584'  accessibilityLabel='Start timer'/>\n        <StatusBar style='auto' />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}